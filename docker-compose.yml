version: "3.7"

services:
    proxy:
        build:
            context: .
            dockerfile: ./docker/proxy/Dockerfile
        ports:
            - "8080:8080"
        container_name: "proxy"

    api:
        build:
            context: .
            dockerfile: ./docker/api/Dockerfile
        container_name: api
        environment: 
            FIREBASE_SECRET: ${FIREBASE_SECRET_PATH}
            FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
            DB_USER: ${MYSQL_USER}
            DB_PASSWORD: ${MYSQL_PASSWORD}
        ports: 
            - "9090:9090"
        volumes:
            - ./api:/go/src/app
        command: go run ./
        depends_on:
            - db
    
    db:
        build: 
            context: .
            dockerfile: ./docker/db/Dockerfile
        container_name: db
        environment: 
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        hostname: mysql
        ports: 
            - "3306:3306"
        volumes: 
            - ./mysql/data:/var/lib/mysql
            - ./mysql/conf.d:/etc/mysql/conf.d
            - ./mysql/initdb.d:/docker-entrypoint-initdb.d
        restart: always
    
    client:
        build: 
            context: .
            dockerfile: ./docker/client/Dockerfile
        container_name: client
        environment:
            REACT_APP_API_KEY: ${REACT_APP_API_KEY}
            REACT_APP_AUTH_DOMAIN: ${REACT_APP_AUTH_DOMAIN}
            REACT_APP_DATABASE_URL: ${REACT_APP_DATABASE_URL}
            REACT_APP_PROJECT_ID: ${REACT_APP_PROJECT_ID}
            REACT_APP_STORAGE_BUCKET: ${REACT_APP_STORAGE_BUCKET}
            REACT_APP_MESSAGING_SENDER_ID: ${REACT_APP_MESSAGING_SENDER_ID}
            REACT_APP_APP_ID: ${REACT_APP_APP_ID}
            REACT_APP_MEASUREMENT_ID: ${REACT_APP_MEASUREMENT_ID}
        ports: 
            - "3000:3000"
        volumes:
            - ./client:/client
        command: yarn start
        tty: true